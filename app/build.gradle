import com.android.build.gradle.api.ApplicationVariant

plugins {
    id 'com.android.application'
    id 'com.chaquo.python'
}

android {
    namespace "org.endlessos.testapp"

    compileSdkVersion 31

    defaultConfig {
        applicationId "org.endlessos.testapp"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
        python {
            version "3.9"

            pip {
                install "https://github.com/learningequality/kolibri/releases/download/v0.16.0-beta0/kolibri-0.16.0b0-py2.py3-none-any.whl"
                install "kolibri-explore-plugin"
            }

            pyc {
                pip false
            }

            extractPackages "kolibri", "testapp"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        managedDevices {
            devices {
                pixel2api30 (com.android.build.api.dsl.ManagedVirtualDevice) {
                    // Use device profiles you typically see in Android Studio.
                    device = "Pixel 2"
                    // Use only API levels 27 and higher.
                    apiLevel = 30
                    // To include Google services, use "google".
                    systemImageSource = "aosp-atd"
                }
            }
        }
    }

    applicationVariants.all { variant ->
        def task = createWelcomeScreenTask(variant)
        variant.mergeAssetsProvider.configure {
            dependsOn(task)
        }
    }
}

dependencies {
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test:core:1.5.0'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation 'androidx.core:core-ktx:1.3.2'
}

TaskProvider createWelcomeScreenTask(ApplicationVariant variant) {
    def taskVariant = variant.name.capitalize()
    def welcomeDir = project.layout.buildDirectory.dir("pip/${variant.dirName}/common/kolibri_explore_plugin/welcomeScreen")
    def genDir = project.layout.buildDirectory.dir("generated/kolibri/${variant.dirName}/welcomeScreen")
    return tasks.register("generate${taskVariant}WelcomeScreenAssets") {
        inputs.dir(welcomeDir)
        outputs.dir(genDir)
        dependsOn("generate${taskVariant}PythonRequirements")
        doLast {
            project.delete(genDir)
            project.mkdir(genDir)
            project.copy {
                from welcomeDir
                into genDir
            }
        }
    }
}
